
useDynLib("igraph")

importFrom(stats, as.dendrogram)
importFrom(stats, as.hclust)
importFrom(stats, median)
importFrom(stats, quantile)
import(methods)

# The igraph interface

export(add.vertices, delete.edges,
       delete.vertices, ecount, neighbors, incident, get.edges, get.edge.ids)

export("[.igraph", "[[.igraph", "[<-.igraph")

S3method("[", "igraph")
S3method("[[", "igraph")
S3method("[<-", "igraph")

export(edge, edges, vertex, vertices, path,
       "+.igraph", "-.igraph")

S3method("+", "igraph")
S3method("-", "igraph")

# Attributes

export(get.graph.attribute, set.graph.attribute, graph.attributes,
       get.vertex.attribute, set.vertex.attribute, vertex.attributes,
       get.edge.attribute, set.edge.attribute, edge.attributes,
       list.graph.attributes, list.vertex.attributes,
       list.edge.attributes, remove.graph.attribute,
       remove.vertex.attribute, remove.edge.attribute,
       "graph.attributes<-", "vertex.attributes<-", "edge.attributes<-")

# iterators

export(V, E, "$.igraph.vs", "$.igraph.es",
       "[.igraph.vs", "[[.igraph.vs", "[.igraph.es", "[[.igraph.es",
       "[<-.igraph.vs", "[<-.igraph.es", "[[<-.igraph.vs", "[[<-.igraph.es",
       "$<-.igraph.vs", "$<-.igraph.es", "V<-", "E<-",
       print.igraph.vs, print.igraph.es, "%--%", "%->%", "%<-%")

S3method("$", igraph)
S3method("$<-", igraph)
S3method("$", igraph.vs)
S3method("[", igraph.vs)
S3method("[[", igraph.vs)
S3method("[<-", igraph.vs)
S3method("[[<-", igraph.vs)
S3method("$<-", igraph.vs)
S3method("$", igraph.es)
S3method("[", igraph.es)
S3method("[[", igraph.es)
S3method("[<-", igraph.es)
S3method("[[<-", igraph.es)
S3method("$<-", igraph.es)
S3method(print, igraph.vs)
S3method(print, igraph.es)
  
# basic functions, printing

export(is.igraph, is.named, is.weighted, is.bipartite,
       are.connected, print.igraph, str.igraph, summary.igraph,
       is.directed, get.edge)

S3method("str", "igraph")

# structure generators

export(graph, graph.adjacency, graph.star, graph.tree, graph.lattice,
       graph.ring, graph.full, graph.atlas, graph.data.frame, graph.edgelist,
       graph.extended.chordal.ring, line.graph, graph.de.bruijn, graph.kautz,
       graph.formula, graph.famous)

# games

export(erdos.renyi.game, random.graph.game, degree.sequence.game,
       aging.prefatt.game, aging.barabasi.game, aging.ba.game,
       growing.random.game, barabasi.game, ba.game,
       callaway.traits.game, establishment.game, grg.game,
       preference.game, asymmetric.preference.game, connect.neighborhood,
       rewire.edges, watts.strogatz.game, lastcit.game, cited.type.game,
       citing.cited.type.game, bipartite.random.game)

# community structure

export(edge.betweenness.community,
       spinglass.community, walktrap.community,
       edge.betweenness.community.merges, fastgreedy.community)

export(membership, modularity, sizes, algorithm, is.hierarchical, merges,
       cutat, communities, crossing, plot.communities, compare,
       compare.communities, showtrace, code.length, asPhylo, dendPlot,
       create.communities)

S3method("print", communities)
S3method("modularity", communities)
S3method("length", communities)
S3method("as.dendrogram", communities)
S3method("as.hclust", communities)
S3method("asPhylo", communities)
S3method("modularity", igraph)
S3method("dendPlot", communities)
S3method("compare", communities)
S3method("compare", numeric)
S3method("compare", default)

# conversion

export(get.adjacency, get.edgelist, as.directed, as.undirected,
       get.adjlist, get.adjedgelist, igraph.from.graphNEL, 
       igraph.to.graphNEL, get.data.frame)

# fitting, other

export(power.law.fit, running.mean, igraph.sample, srand)

# foreign formats

export(read.graph, write.graph, graph.graphdb)

# layouts

export(layout.auto, layout.random, layout.circle,
       layout.lgl,
       layout.sphere, layout.merge,
       layout.reingold.tilford, layout.norm, piecewise.layout)
export(igraph.drl.default, igraph.drl.coarsen, igraph.drl.coarsest,
       igraph.drl.refine, igraph.drl.final)

# structural properties

export(subgraph, degree, degree.distribution, diameter,
       subcomponent, betweenness, bibcoupling, cocitation,
       shortest.paths, minimum.spanning.tree,
       get.shortest.paths, average.path.length, transitivity,
       get.all.shortest.paths, get.diameter, farthest.nodes,
       constraint, page.rank, reciprocity, rewire,
       graph.density, neighborhood.size, neighborhood, graph.neighborhood,
       graph.coreness, topological.sort, girth, is.loop, is.multiple,
       count.multiple)

# plotting

export(plot.igraph, tkplot, tkplot.close, tkplot.off, tkplot.fit.to.screen,
       tkplot.reshape, tkplot.export.postscript, tkplot.getcoords,
       tkplot.center, tkplot.rotate, tkplot.canvas, tkplot.setcoords,
       rglplot.igraph, rglplot,
       autocurve.edges, vertex.shapes, add.vertex.shape,
       igraph.shape.noclip, igraph.shape.noplot)

S3method(rglplot, igraph)

# components

export(cluster.distribution, is.connected, decompose.graph,
       no.clusters, groups)

S3method(groups, default)
S3method(groups, communities)

# centrality

export(evcent, bonpow, alpha.centrality, subgraph.centrality)
export(igraph.arpack.default, igraph.eigen.default)

# dynamics measurement

export(revolver.d, revolver.error.d,
       revolver.ad, revolver.error.ad,
       revolver.ade, revolver.error.ade,
       revolver.e, revolver.error.e,
       revolver.de, revolver.error.de,
       revolver.l, revolver.error.l,
       revolver.dl, revolver.error.dl,
       revolver.el, revolver.error.el,
       revolver.r, revolver.error.r,
       revolver.ar, revolver.error.ar,
       revolver.di, revolver.error.di,
       revolver.adi, revolver.error.adi,
       revolver.il, revolver.error.il,
       revolver.ir, revolver.error.ir,
       revolver.air, revolver.error.air)

export (revolver.d.d, revolver.p.p)

export (evolver.d)

# isomorphism, motifs

export(graph.isoclass, graph.isomorphic, graph.motifs,
       graph.motifs.est, graph.isocreate, graph.motifs.no,
       graph.isomorphic.vf2, graph.subisomorphic.vf2,
       graph.count.isomorphisms.vf2, graph.count.subisomorphisms.vf2,
       graph.get.isomorphisms.vf2, graph.get.subisomorphisms.vf2)

# operators

export(graph.disjoint.union, "%du%", graph.intersection, "%s%",
       graph.union, "%u%", graph.difference, "%m%",
       graph.complementer, graph.compose, "%c%")

# parameters, config

export(igraph.par, igraph.options, getIgraphOpt, igraphtest, igraph.version)

# console

export(igraph.console, .igraph.progress, .igraph.status)

# flows, cuts, etc.

export(graph.mincut, vertex.connectivity, edge.connectivity,
       edge.disjoint.paths, vertex.disjoint.paths, graph.adhesion,
       graph.cohesion)

# cliques

export(cliques, largest.cliques, maximal.cliques, clique.number,
       independent.vertex.sets, largest.independent.vertex.sets,
       maximal.independent.vertex.sets, independence.number)

# cohesive blocking, new style 

export(blocks, blockGraphs, cohesion, hierarchy, parent,
       plotHierarchy, exportPajek, maxcohesion)

S3method(print, cohesiveBlocks)
S3method(summary, cohesiveBlocks)
S3method(plot, cohesiveBlocks)
S3method(length, cohesiveBlocks)

# arpack

export(arpack)

# tkigraph, demo

export(tkigraph,igraphdemo)

# HRG

S3method(print, igraphHRG)
S3method(print, igraphHRGConsensus)
S3method("as.dendrogram", igraphHRG)
S3method("as.hclust", igraphHRG)
S3method("asPhylo", igraphHRG)
S3method("dendPlot", igraphHRG)

# SCG

export(scg)
S3method(scg, "igraph")
S3method(scg, "matrix")
S3method(scg, "Matrix")

# nexus

export(nexus.get, nexus.list, nexus.info, nexus.search)
S3method(print, nexusDatasetInfo)
S3method(print, nexusDatasetInfoList)
S3method(summary, nexusDatasetInfoList)
S3method("[", nexusDatasetInfoList)

# Sparse data frame

S3method(as.data.frame, igraphSDF)
S3method("[", igraphSDF)
S3method("[<-", igraphSDF)

# convert to igraph

export(as.igraph)
S3method(as.igraph, "igraphHRG")

# Graphlets

export(graphlets, graphlets.project)

# SIR

export(plot.sir, time_bins)
S3method(plot, sir)
S3method(median, sir)
S3method(quantile, sir)
S3method(time_bins, sir)

######################## New names

export(add_edges)
export(add_shape)
export(add_vertices)
export(adhesion)
export(adj)
export(adj_edge_list)
export(adj_eigen)
export(adj_list)
export(alpha_centrality)
export(any_multiple)
export(arpack_defaults)
export(articulation_points)
export(assortativity_degree)
export(assortativity_nominal)
export(authority_score)
export(automorphisms)

export(betweenness_estimate)
export(bfs)
export(biconn_comps)
export(bip_map)
export(bip_proj)
export(bip_proj_size)

export(canon_perm)
export(centr_betw)
export(centr_betw_tmax)
export(centr_clo)
export(centr_clo_tmax)
export(centr_degree)
export(centr_degree_tmax)
export(centr_evcent)
export(centr_evcent_tmax)
export_centralize)
export(clique_num)
export(closeness_estimate)
export(cluster_edge_betweenness)
export(cluster_fast_greedy)
export(cluster_infomap)
export(cluster_label_prop)
export(cluster_leading_eigen)
export(cluster_louvain)
export(cluster_optimal)
export(cluster_spinglass)
export(cluster_walktrap)
export(code_len)
export(cohesion)
S3method(cohesion, igraph)
S3method(cohesion, cohesiveBlocks)
export(cohesive_blocks)
export(comp_dist)
export(compare)
export(complementer)
export(compose)
export(comps)
export(console)
export(connect)
export(contract)
export(convex_hull)
export(coreness)
export(count_comps)
export(count_motifs)
export(count_multiple)
export(count_triangles)
export(cut_at)

export(decompose)
export(degree_dist)
export(delete_edge_attr)
export(delete_graph_attr)
export(delete_vertex_attr)
export(delete_edges)
export(delete_vertices)
export(dend_plot)
S3method(dend_plot, communities)
S3method(dend_plot, igraphHRG)
export(dfs)
export(difference)
export(disjoint_union)
export(distance_table)
export(distances)
export(diversity)
export(dominator_tree)
export(dyad_census)

export(edge_attr)
export(edge_attr_names)
export(edge_betweenness)
export(edge_betweenness_estimate)
export(edge_conn)
export(edge_disjoint_paths)
export(edgelist)
export(ego)
export(ego_size)
export(eigen_centrality)
export(eigen_defaults)

export(g_adj_matrix)
export(g_atlas)
export(g_bip)
export(g_blocks)
export(g_chordal_ring)
export(g_cit_types)
export(g_cit_cit_types)
export(g_de_bruijn)
export(g_degseq)
export(g_df)
export(g_edgelist)
export(g_ego)
export(g_empty)
export(g_fitness)
export(g_forestfire)
export(g_formula)
export(g_full)
export(g_full_bip)
export(g_full_cit)
export(g_graphdb)
export(g_grg)
export(g_growing)
export(g_incidence)
export(g_islands)
export(g_iso_class)
export(g_k_reg)
export(g_kautz)
export(g_last_cit)
export(g_lattice)
export(g_lcf)
export(g_line)
export(g_nm)
export(g_np)
export(g_np_bip)
export(g_pa)
export(g_pa_age)
export(g_pref)
export(g_pref_asym)
export(g_ring)
export(g_sbm)
export(g_smallworld)
export(g_star)
export(g_traits)
export(g_traits_callaway)
export(g_tree)
export(graph_attr)
export(graph_attr_names)
export(graphlet_basis)
export(graphlet_proj)

export(hub_score)

export(igraph_demo)
export(igraph_test)
export(igraph_version)
export(incidence)
export(ivs)
export(ivs_size)
export(induced_subgraph)
export(is_connected_to)
export(iso_class)

export(knn)

export(l_auto)
export(l_bip)
export(l_circle)
export(l_comps)
export(l_dh)
export(l_drl)
export(l_fr)
export(l_gem)
export(l_graphopt)
export(l_grid)
export(l_kk)
export(l_lgl)
export(l_mds)
export(l_merge)
export(l_norm)
export(l_random)
export(l_sphere)
export(l_star)
export(l_sugiyama)
export(l_tree)
export(laplacian)
export(largest_cliques)
export(largest_ivs)

export(make_curves)
export(max_bip_match)
export(max_cardinality)
export(max_cliques)
export(max_flow)
export(maximal_ivs)
export(mean_distance)
export(min_cut)
export(min_size_sep)
export(min_st_sep)
export(motifs)
export(mst)

export(num_max_cliques)

export(page_rank)
export(page_rank_old)
export(permute)
export(pl_fit)
export(plot_hierarchy)
export(power_centrality)

export(read_graph)
export(running_mean)

export(sample_motifs)
export(sample_seq)
export(scg_group)
export(scg_eps)
export(scg_semi_proj)
export(set_edge_attr)
export(set_graph_attr)
export(set_vertex_attr)
export(show_trace)
export(st_cuts)
export(st_min_cuts)
export(stochastic)
export(strength)

export(tk_canvas)
export(tk_center)
export(tk_close)
export(tk_postscript)
export(tk_fit)
export(tk_coords)
export(tk_off)
export(tk_reshape)
export(tk_rotate)
export(tk_set_coords)
export(topo_sort)
export(triad_census)

export(unfold_tree)
export(union)

export(vertex_attr)
export(vertex_attr_names)
export(vertex_conn)
export(vertex_disjoint_paths)

export(write_graph)

######################## REST IS GENERATED BY stimulus
